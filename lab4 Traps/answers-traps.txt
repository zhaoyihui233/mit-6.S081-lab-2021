1.Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
答：a0到a7保存了函数调用的参数，其中a0和a1还能保存函数的返回值。
通给查看call.asm文件，在第45行可知a2寄存器保存了13这个参数。

2.Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
答：没有调用f函数的代码，因为f函数与g函数都比较简单，因此g函数被内联到了f函数里，f函数又进一步内联到了main函数里。

3.At what address is the function printf located?
答：0x0000000000000628, main 中使用 pc 相对寻址来计算得到这个地址。

4.What value is in the register ra just after the jalr to printf in main?
答：ra是return address，是执行完函数后下一条指令的地址，在这里也就是jalr指令的下一条汇编指令的地址，
这里是0x0000000000000038。

5.Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set to in order to yield the same output? Would you need to change to a different value?i57616

Here's a description of little- and big-endian and a more whimsical description.
答：


6.In the following code, what is going to be printed after ? (note: the answer is not a specific value.) Why does this happen? 'y='

	printf("x=%d y=%d", 3);
答：
